name: Release Binaries

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - run: pip install pyinstaller
      - run: pyinstaller --onefile vibe_security/cli.py --name vibe-security
      - name: Rename binary
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv dist/vibe-security vibe-security-linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv dist/vibe-security vibe-security-macos
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/vibe-security.exe vibe-security-windows.exe
          fi
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-binary
          path: |
            vibe-security-linux
            vibe-security-macos
            vibe-security-windows.exe

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Gather binaries
        run: |
          find ./artifacts -type f -exec mv {} . \;
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            vibe-security-linux
            vibe-security-macos
            vibe-security-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
